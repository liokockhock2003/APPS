"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

# Import the Path class from pathlib module to handle file paths
from pathlib import Path
from decouple import config
from decouple import Config, RepositoryEnv
from pathlib import Path

# Define the base directory of the project, typically the parent directory of the current file
BASE_DIR = Path(__file__).resolve().parent.parent
config = Config(RepositoryEnv(BASE_DIR / '.env'))
print(f"DEBUG: POWERHR_JWT_SECRET from .env: {config('POWERHR_JWT_SECRET', default='NOT SET')}")

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# The secret key used for cryptographic signing in Django. Should be kept confidential
SECRET_KEY = 'django-insecure-w+=$3jv^w5dx(4rvr9pbjwec_n8n@sc!$r_u9v&avt64$d=e#^'
POWERHR_JWT_SECRET = config('POWERHR_JWT_SECRET', default=None)

# SECURITY WARNING: don't run with debug turned on in production!
# Enables debug mode, which should be turned off in production for security reasons
DEBUG = True

# List of host/domain names that this Django site can serve
# Ensure that this includes the host where the app is deployed
ALLOWED_HOSTS = ["127.0.0.1","muhammadiqbalhabibie.pythonanywhere.com"]

# Application definition

# List of installed apps for this Django project, including default apps and custom apps
INSTALLED_APPS = [
    'django.contrib.admin',           # Admin site functionality
    'django.contrib.auth',            # Authentication framework
    'django.contrib.contenttypes',    # Content type framework
    'django.contrib.sessions',        # Session framework
    'django.contrib.messages',        # Messaging framework
    'django.contrib.staticfiles',     # Static file handling
    'main.apps.MainConfig',           # Custom application
    'widget_tweaks',                  # Third-party app for tweaking form widgets
    'compressor',                     # Third-party app for compressing static files
]

# List of middleware used by Django to process requests and responses
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',     # Provides security enhancements
    'django.contrib.sessions.middleware.SessionMiddleware', # Manages sessions
    'django.middleware.common.CommonMiddleware',         # Adds various common middleware features
    'django.middleware.csrf.CsrfViewMiddleware',          # Provides Cross Site Request Forgery protection
    'django.contrib.auth.middleware.AuthenticationMiddleware', # Handles authentication
    'django.contrib.messages.middleware.MessageMiddleware', # Manages user messages
    'django.middleware.clickjacking.XFrameOptionsMiddleware', # Prevents clickjacking attacks
    'mysite.middleware.auth_middleware.AuthenticationMiddleware',
]

# The URL configuration for this project
ROOT_URLCONF = 'mysite.urls'

# Template settings
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates', # Specifies the backend to use for templates
        'DIRS': [], # List of directories to search for templates (empty list means using app directories)
        'APP_DIRS': True, # Enable template loading from app directories
        'OPTIONS': {
            'context_processors': [  # List of context processors to add context to templates
                'django.template.context_processors.debug', # Adds debug information
                'django.template.context_processors.request', # Adds request object to context
                'django.contrib.auth.context_processors.auth', # Adds user authentication context
                'django.contrib.messages.context_processors.messages', # Adds message framework context
            ],
        },
    },
]

# The WSGI application used by Django's runserver and any WSGI-compatible web server
WSGI_APPLICATION = 'mysite.wsgi.application'

# Database configuration
# Using SQLite for the default database backend
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # Database engine to use
        'NAME': BASE_DIR / 'db.sqlite3',         # Path to the database file
    }
}

# Password validation settings
# List of validators used to validate user passwords
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', # Ensures password similarity with user attributes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', # Ensures minimum length for passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', # Prevents use of common passwords
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', # Ensures password contains digits
    },
]

# Internationalization settings
# Settings related to language and time zone
LANGUAGE_CODE = 'en-us'  # Default language code
TIME_ZONE = 'UTC'        # Default time zone

USE_I18N = True          # Enable Djangoâ€™s translation system
USE_TZ = True            # Enable timezone support

# Static files settings
# Configuration for serving static files (CSS, JavaScript, images)
STATIC_URL = 'static/'  # URL for static files
CRISPY_ALLOWED_TEMPLATE_PACKS = "tailwind" # Allowed template packs for crispy forms
CRISPY_TEMPLATE_PACK = "tailwind"          # Template pack to use for crispy forms

# Default primary key field type for models
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuration for compressing static files
COMPRESS_ROOT = BASE_DIR / 'static/'  # Root directory for compressed static files
COMPRESS_ENABLED = True              # Enable compression of static files

# Static file finders for locating and serving static files
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',   # Finds static files in the filesystem
    'django.contrib.staticfiles.finders.AppDirectoriesFinder', # Finds static files in app directories
    'compressor.finders.CompressorFinder',  # Finds compressed static files
]

# Email configuration
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # Backend to use for sending emails
EMAIL_HOST = 'localhost'  # Email server host
EMAIL_PORT = 1025          # Email server port
EMAIL_USE_TLS = True      # Enable TLS for email
EMAIL_HOST_USER = 'multiperiodps@gmail.com'  # Email host user
EMAIL_HOST_PASSWORD = 'rfmkjumulahafrhg'       # Email host password
RECIPIENT_ADDRESS = 'multiperiodps@gmail.com' # Recipient email address

# Authentication URL settings
LOGIN_URL = 'login'                 # URL to redirect to for login
LOGOUT_URL = 'logout'               # URL to redirect to for logout
LOGIN_REDIRECT_URL = 'home'         # URL to redirect to after successful login
LOGOUT_REDIRECT_URL = 'login'       # URL to redirect to after logout